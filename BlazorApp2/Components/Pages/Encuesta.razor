@page "/encuesta"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using BlazorApp2.DTO
@using BlazorApp2.Entities
@using BlazorApp2.Repository
@inject NavigationManager NavigationManager
@inject ITipoRepository tipoRepository
@inject IEstatusRepository estatusRepository
@inject IContribuyenteRepository contribuyenteRepository

<h3>Registro de Contribuyentes</h3>

<EditForm Model="dto" OnValidSubmit="AgregarContribuyenteAsync"
          AdditionalAttributes="@(new Dictionary<string, object> { ["name"] = "contribuyenteForm" })">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-6">
            <div class="mb-3">
                <label>Nombre:</label>
                <InputText @bind-Value="dto.Nombre" class="form-control"
                           oninput="this.value = this.value.replace(/[^a-zA-Z\s]/g, '').slice(0, 50);" />
                <ValidationMessage For="@(() => dto.Nombre)" />
            </div>

            <div class="mb-3">
                <label>RNC/Cédula:</label>
                <InputText @bind-Value="dto.RncCedula"
                           class="form-control"
                           maxlength="11"
                           title="Debe tener 9 o 11 dígitos numéricos."
                           oninput="this.value = this.value.replace(/[^0-9]/g, '');" />
                <ValidationMessage For="@(() => dto.RncCedula)" />
            </div>

            <div class="mb-3">
                <label>Tipo:</label>
                <InputSelect @bind-Value="dto.TipoId" class="form-control">
                    <option value="">Seleccione</option>
                    @foreach (var tipo in tipos)
                    {
                        <option value="@tipo.Id">@tipo.Nombre</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => dto.TipoId)" />
            </div>

            <div class="mb-3">
                <label>Estado:</label>
                <InputSelect @bind-Value="dto.EstatusId" class="form-control">
                    <option value="">Seleccione</option>
                    @foreach (var estado in estados)
                    {
                        <option value="@estado.Id">@estado.Nombre</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => dto.EstatusId)" />
            </div>

            <button type="submit" class="btn btn-success">Agregar</button>
        </div>
    </div>
</EditForm>


@if (mostrarMensaje)
{
    <div class="alert alert-success mt-3">@mensaje</div>
}

@code {
    private List<Entities.Tipo> tipos = new();
    private List<Entities.Estatus> estados = new();
    private CrearContribuyenteDTO dto = new();
    private string mensaje = "";
    private bool mostrarMensaje = false;

    protected override async Task OnInitializedAsync()
    {
        tipos = await tipoRepository.Listar();
        estados = await estatusRepository.Listar();
    }

    private async Task AgregarContribuyenteAsync()
    {
        var contribuyente = new Entities.Contribuyente
        {
            Nombre = dto.Nombre,
            RncCedula = dto.RncCedula,
            TipoId = dto.TipoId,
            EstatusId = dto.EstatusId
        };

        await contribuyenteRepository.Agregar(contribuyente);

        mensaje = "✅ Contribuyente agregado correctamente";
        mostrarMensaje = true;

        dto = new(); // Limpiar formulario
        StateHasChanged(); // Forzar actualización visual

        await Task.Delay(2000);
        NavigationManager.NavigateTo("/contribuyentes");
    }
}
